{
  "swagger" : "2.0",
  "info" : {
    "description" : "Ica MinButik - Todo",
    "version" : "1.0.0",
    "title" : "ToDo API",
    "contact" : {
      "email" : "goran.roseen@acando.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "clients",
    "description" : "Operations available to regular clients"
  } ],
  "paths" : {
    "/todo" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "searches for todos",
        "operationId" : "searchTodo",
        "description" : "By passing in the appropriate options, you can search for\navailable todos in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "fetch a specific ToDo",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "assignedTo",
          "description" : "fetch ToDos for a specific user or group",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "category",
          "description" : "fetch ToDos with a specific category",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TodoItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "adds a Todo item",
        "operationId" : "addTodo",
        "description" : "Adds a Todo item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "TodoItem",
          "description" : "ToDo item to add",
          "schema" : {
            "$ref" : "#/definitions/TodoItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      },
      "put" : {
        "tags" : [ "clients" ],
        "summary" : "updates a Todo item",
        "operationId" : "updateTodo",
        "description" : "Updates a Todo item in the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "TodoItem",
          "description" : "ToDo item to update",
          "schema" : {
            "$ref" : "#/definitions/TodoItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Fetch all categories",
        "operationId" : "getCategories",
        "description" : "Fetch all categories",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "all categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds a Category",
        "operationId" : "addCategory",
        "description" : "Adds a Category to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Category",
          "description" : "Category to add",
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions" : {
    "TodoItem" : {
      "type" : "object",
      "required" : [ "id", "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "title" : {
          "type" : "string",
          "example" : "Städa charken"
        },
        "note" : {
          "type" : "string",
          "example" : "Gör så här"
        },
        "todoType" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "example" : 0
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-03-14 15:22"
        },
        "dueAt" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-04-12 12:00"
        },
        "isArchived" : {
          "type" : "boolean",
          "example" : true
        },
        "isCompleted" : {
          "type" : "boolean",
          "example" : true
        },
        "sortId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "checkitems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheckItem"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "assignedTo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Assignee"
          }
        }
      }
    },
    "CheckItem" : {
      "required" : [ "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "title" : {
          "type" : "string",
          "example" : "Svabba golvet"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-03-14 15:22"
        },
        "isCompleted" : {
          "type" : "boolean",
          "example" : true
        },
        "sortId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "todoId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        }
      }
    },
    "Tag" : {
      "required" : [ "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "title" : {
          "type" : "string",
          "example" : "Rengöring"
        },
        "sortId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        }
      }
    },
    "Category" : {
      "required" : [ "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "title" : {
          "type" : "string",
          "example" : "Frukt och Grönt"
        },
        "sortId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        }
      }
    },
    "User" : {
      "required" : [ "username" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "username" : {
          "type" : "string",
          "example" : "segorros"
        },
        "fullname" : {
          "type" : "string",
          "example" : "Göran Roseen"
        }
      }
    },
    "Group" : {
      "required" : [ "title" ],
      "allOf" : [ {
        "$ref" : "#/definitions/Assignee"
      } ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "title" : {
          "type" : "string",
          "example" : "Frukt & Grönt"
        }
      }
    },
    "Assignee" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "name" : {
          "type" : "string",
          "example" : "Frukt & Grönt"
        },
        "objectType" : {
          "type" : "string",
          "description" : "User or Group",
          "example" : "Group"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/ica-egenkontroll/todo/1.0.0",
  "x-azure-api-id" : "sh-1523977537155"
}