{
  "swagger" : "2.0",
  "info" : {
    "description" : "Ica MinButik - Todo",
    "version" : "1.0.0",
    "title" : "ToDo API",
    "contact" : {
      "email" : "goran.roseen@acando.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "clients",
    "description" : "Operations available to regular clients"
  } ],
  "paths" : {
    "/todos" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "searches for todos",
        "operationId" : "searchTodo",
        "description" : "By passing in the appropriate options, you can search for\navailable todos in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "fetch a specific ToDo",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "assignedTo",
          "description" : "fetch ToDos for a specific user or group",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "category",
          "description" : "fetch ToDos with a specific category",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TodoItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/todos/{id}" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Find Todo by Id",
        "description" : "Find a Todo by Id",
        "operationId" : "getTodDoById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Id of the Todo that needs to be fetched",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TodoItem"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Delete ToDo by Id",
        "description" : "Deletes a Todo item in the system",
        "operationId" : "deleteTodo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Todo that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/todos/{id}/assignUser" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "assigns the todo to a user",
        "operationId" : "todoAssignUser",
        "description" : "Assigns a user to the todo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the todo to change the assignee for",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "User",
          "description" : "Properties of the User to assign to",
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/todos/{id}/assignDepartment" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "assigns the todo to a department",
        "operationId" : "todoAssignDepartment",
        "description" : "Assigns a department to the todo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the todo to change the assignee for",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Department",
          "description" : "Properties of the Department to assign to",
          "schema" : {
            "$ref" : "#/definitions/Department"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/todos/{id}/closeTodo" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "close the todo",
        "operationId" : "todoClose",
        "description" : "close the todo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the todo to change the assignee for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Fetch all categories",
        "operationId" : "getCategories",
        "description" : "Fetch all categories",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "all categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds a Category",
        "operationId" : "addCategory",
        "description" : "Adds a Category to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Category",
          "description" : "Category to add",
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/categories/{id}" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Find Category by Id",
        "description" : "Find a Category by Id",
        "operationId" : "getCategoryById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Id of the Category that needs to be fetched",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Category"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "updates a Category",
        "operationId" : "updateCategory",
        "description" : "Updates a Category in the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the Category to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Category",
          "description" : "Category to update",
          "schema" : {
            "$ref" : "#/definitions/Category"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Delete Category by Id",
        "description" : "Deletes a Category in the system",
        "operationId" : "deleteCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Category that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Fetch all tags",
        "operationId" : "getTags",
        "description" : "Fetch all tags",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "all tags",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds a Tag",
        "operationId" : "addTag",
        "description" : "Adds a Tag to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Tag",
          "description" : "Tag to add",
          "schema" : {
            "$ref" : "#/definitions/Tag"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/tags/{id}" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Find Tag by Id",
        "description" : "Find a Tag by Id",
        "operationId" : "getTagById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Id of the Tag that needs to be fetched",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "updates a Tag",
        "operationId" : "updateTag",
        "description" : "Updates a Tag in the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the Tag to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Tag",
          "description" : "Tag to update",
          "schema" : {
            "$ref" : "#/definitions/Tag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Delete Tag by Id",
        "description" : "Deletes a Tag in the system",
        "operationId" : "deleteTag",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Tag that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/activities" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "searches for activities",
        "operationId" : "searchActivity",
        "description" : "By passing in the appropriate options, you can search for\navailable activity in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "fetch a specific ToDo",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "category",
          "description" : "fetch activities with a specific category",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Activity"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds an Activity",
        "operationId" : "addActivity",
        "description" : "Adds an activity to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Activity",
          "description" : "Activity to add",
          "schema" : {
            "$ref" : "#/definitions/Activity"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    },
    "/activities/{id}" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Find activity by Id",
        "description" : "Find an activity by Id",
        "operationId" : "getActivityById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Id of the activity that needs to be fetched",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Activity"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "updates an activity item",
        "operationId" : "updateActivity",
        "description" : "Updates an activity item in the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of the Activity item to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ActivityItem",
          "description" : "Activity item to update",
          "schema" : {
            "$ref" : "#/definitions/TodoItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Delete Activity by Id",
        "description" : "Deletes an activity item in the system",
        "operationId" : "deleteActivity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the activity that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/activities/{id}/createTodoForUser" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "Creates a todo based on the activity",
        "operationId" : "createTodoForUserFromActivity",
        "description" : "Creates a todo assiged to a user based on the activity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the activity that the todo will be created from",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "User",
          "description" : "Properties of the user to assign the todo to",
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/activities/{id}/createTodoForDepartment" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "Creates a todo based on the activity",
        "operationId" : "createTodoForDepartmentFromActivity",
        "description" : "Creates a todo assiged to a department based on the activity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "ID of the activity that the todo will be created from",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Department",
          "description" : "Properties of the department to assign the todo to",
          "schema" : {
            "$ref" : "#/definitions/Department"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    }
  },
  "definitions" : {
    "TodoItem" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseTable"
      }, {
        "type" : "object",
        "required" : [ "title" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : 123456
          },
          "title" : {
            "type" : "string",
            "example" : "Städa charken"
          },
          "todoType" : {
            "type" : "string",
            "description" : "Must be one of \"basic\", \"measure\", \"yesno\"",
            "example" : "basic"
          },
          "note" : {
            "type" : "string",
            "example" : "Gör så här"
          },
          "contentUrl" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://episerver.ica.se/getContent?id=4711"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-14 15:22"
          },
          "dueAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-04-12 12:00"
          },
          "assignedTo" : {
            "$ref" : "#/definitions/Assignee"
          },
          "isCompleted" : {
            "type" : "boolean",
            "example" : true
          },
          "completedBy" : {
            "$ref" : "#/definitions/User"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-04-12 12:00"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "category" : {
            "$ref" : "#/definitions/Category"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        }
      } ]
    },
    "Tag" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseTable"
      }, {
        "type" : "object",
        "required" : [ "title" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : 123456
          },
          "title" : {
            "type" : "string",
            "example" : "Rengöring"
          },
          "sortId" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          }
        }
      } ]
    },
    "Category" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseTable"
      }, {
        "type" : "object",
        "required" : [ "title" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : 123456
          },
          "title" : {
            "type" : "string",
            "example" : "HACCP"
          },
          "sortId" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          }
        }
      } ]
    },
    "User" : {
      "required" : [ "id", "username" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "username" : {
          "type" : "string",
          "example" : "segorros"
        },
        "fullname" : {
          "type" : "string",
          "example" : "Göran Roseen"
        }
      }
    },
    "Assignee" : {
      "properties" : {
        "objectType" : {
          "type" : "string",
          "description" : "Must be one of User or Group",
          "enum" : [ "User", "Group" ],
          "example" : "Group"
        },
        "id" : {
          "type" : "string",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "name" : {
          "type" : "string",
          "example" : "Frukt & Grönt"
        }
      }
    },
    "Activity" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseTable"
      }, {
        "type" : "object",
        "required" : [ "title" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : 123456
          },
          "title" : {
            "type" : "string",
            "example" : "Städa charken"
          },
          "activityType" : {
            "type" : "string",
            "description" : "Must be one of \"basic\", \"measure\", \"yesno\"",
            "example" : "basic"
          },
          "note" : {
            "type" : "string",
            "example" : "Gör så här"
          },
          "contentUrl" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://episerver.ica.se/getContent?id=4711"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-14 15:22"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "category" : {
            "$ref" : "#/definitions/Category"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        }
      } ]
    },
    "BaseTable" : {
      "type" : "object",
      "required" : [ "modifiedOn" ],
      "properties" : {
        "modifiedOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-04-24 14:41"
        }
      }
    },
    "Department" : {
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : 123456
        },
        "name" : {
          "type" : "string",
          "example" : "Frukt & Grönt"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/ica-egenkontroll/todo/1.0.0",
  "x-azure-api-id" : "sh-1523977537155"
}