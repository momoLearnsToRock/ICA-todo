import sql = require('mssql');
import dbg = require('debug');
import h = require('../helpers/misc');
import odataV4Sql = require('odata-v4-sql');
import { SqlTableType } from './sqlTableType';

const debug = dbg('todo:activityCardsTable');

export class ActivityCardsTable extends SqlTableType {
  constructor(connectionPool: sql.ConnectionPool) {
    const activityCardsFields: h.Helpers.SqlField[] = [
      new h.Helpers.SqlField({ name: 'id', type: sql.BigInt }),
      new h.Helpers.SqlField({ name: 'activityId', type: sql.BigInt }),
      new h.Helpers.SqlField({ name: 'notes', type: sql.NVarChar(sql.MAX) }),
      new h.Helpers.SqlField({ name: 'cardType', type: sql.NVarChar(50) }),
      new h.Helpers.SqlField({ name: 'input', type: sql.NVarChar(sql.MAX) }),
      new h.Helpers.SqlField({ name: 'outputText', type: sql.NVarChar(sql.MAX) }),
      new h.Helpers.SqlField({ name: 'modifiedOn', type: sql.DateTime }),
    ];

    super({ connectionPool: connectionPool, tableName: 'ActivityCardsBase', viewName: 'ActivityCardsBase', fields: activityCardsFields, autoGeneratedPrimaryKey: true, throwOnExtraFields: true });
    debug.enabled = true;
  }

  async customUpdateChecks(jsonBody: any) {
    return;
  }
  async customInsertChecks(jsonBody: any) {
    return;
  }
}